name: Deploy Odoo Dev

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Zip contents of custom addons (without parent folder)
        run: |
          ls -al addons_custom/
          cd addons_custom && zip -r ../addons_custom.zip . && cd ..

      - name: Upload to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set default.s3.addressing_style path
          aws configure set default.s3.multipart_threshold 5GB
          aws configure set default.s3.signature_version s3
          aws s3 cp addons_custom.zip s3://${{ secrets.AWS_S3_CICD_BUCKET }}/odoo/addons_custom.zip --endpoint-url ${{ secrets.AWS_S3_ENDPOINT }}

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa.pem
          chmod 600 ~/.ssh/id_rsa.pem
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          ssh-keyscan -H ${{ secrets.SSH_HOST_SANDBOX }} >> ~/.ssh/known_hosts
          ssh-keyscan -H ${{ secrets.SSH_HOST_ONEXINK }} >> ~/.ssh/known_hosts
          ssh-keyscan -H ${{ secrets.SSH_HOST_EASYCHECKIN }} >> ~/.ssh/known_hosts

      - name: Remote download & unzip from S3
        run: |
          ssh -i ~/.ssh/id_rsa.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            set -e
            cd /opt/odoo
            aws s3 cp s3://${{ secrets.AWS_S3_CICD_BUCKET }}/odoo/addons_custom.zip /tmp/addons_custom.zip --endpoint-url ${{ secrets.AWS_S3_ENDPOINT }}
            echo "Unzipping to /opt/odoo/odoo-custom-addons/..."
            unzip -o /tmp/addons_custom.zip -d /opt/odoo/odoo-custom-addons/
            echo "Cleaning up..."
            rm /tmp/addons_custom.zip
            echo "List folder for verification..."
            ls -al /opt/odoo/odoo-custom-addons/
          EOF
          ssh -i ~/.ssh/id_rsa.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST_SANDBOX }} << 'EOF'
            set -e
            cd /opt/odoo
            aws s3 cp s3://${{ secrets.AWS_S3_CICD_BUCKET }}/odoo/addons_custom.zip /tmp/addons_custom.zip --endpoint-url ${{ secrets.AWS_S3_ENDPOINT }}
            echo "Unzipping to /opt/odoo/odoo-custom-addons/..."
            unzip -o /tmp/addons_custom.zip -d /opt/odoo/odoo-custom-addons/
            echo "Cleaning up..."
            rm /tmp/addons_custom.zip
            echo "List folder for verification..."
            ls -al /opt/odoo/odoo-custom-addons/
          EOF
          ssh -i ~/.ssh/id_rsa.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST_ONEXINK }} << 'EOF'
            set -e
            cd /opt/odoo
            aws s3 cp s3://${{ secrets.AWS_S3_CICD_BUCKET }}/odoo/addons_custom.zip /tmp/addons_custom.zip --endpoint-url ${{ secrets.AWS_S3_ENDPOINT }}
            echo "Unzipping to /opt/odoo/odoo-custom-addons/..."
            unzip -o /tmp/addons_custom.zip -d /opt/odoo/odoo-custom-addons/
            echo "Cleaning up..."
            rm /tmp/addons_custom.zip
            echo "List folder for verification..."
            ls -al /opt/odoo/odoo-custom-addons/
          EOF
          ssh -i ~/.ssh/id_rsa.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST_EASYCHECKIN }} << 'EOF'
            set -e
            cd /opt/odoo
            aws s3 cp s3://${{ secrets.AWS_S3_CICD_BUCKET }}/odoo/addons_custom.zip /tmp/addons_custom.zip --endpoint-url ${{ secrets.AWS_S3_ENDPOINT }}
            echo "Unzipping to /opt/odoo/odoo-custom-addons/..."
            unzip -o /tmp/addons_custom.zip -d /opt/odoo/odoo-custom-addons/
            echo "Cleaning up..."
            rm /tmp/addons_custom.zip
            echo "List folder for verification..."
            ls -al /opt/odoo/odoo-custom-addons/
          EOF

      - name: Overwrite requirements.txt
        run: |
          scp -i ~/.ssh/id_rsa.pem ./requirements-deploy.txt ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/opt/odoo/odoo/requirements.txt
          scp -i ~/.ssh/id_rsa.pem ./requirements-deploy.txt ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST_SANDBOX }}:/opt/odoo/odoo/requirements.txt
          scp -i ~/.ssh/id_rsa.pem ./requirements-deploy.txt ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST_ONEXINK }}:/opt/odoo/odoo/requirements.txt
          scp -i ~/.ssh/id_rsa.pem ./requirements-deploy.txt ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST_EASYCHECKIN }}:/opt/odoo/odoo/requirements.txt

      - name: Install Python dependencies
        run: |
          ssh -i ~/.ssh/id_rsa.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            set -e
            cd /opt/odoo
            source odoo-venv/bin/activate
            pip3 install -r odoo/requirements.txt
            deactivate
          EOF
          ssh -i ~/.ssh/id_rsa.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST_SANDBOX }} << 'EOF'
            set -e
            cd /opt/odoo
            source odoo-venv/bin/activate
            pip3 install -r odoo/requirements.txt
            deactivate
          EOF
          ssh -i ~/.ssh/id_rsa.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST_ONEXINK }} << 'EOF'
            set -e
            cd /opt/odoo
            source odoo-venv/bin/activate
            pip3 install -r odoo/requirements.txt
            deactivate
          EOF
          ssh -i ~/.ssh/id_rsa.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST_EASYCHECKIN }} << 'EOF'
            set -e
            cd /opt/odoo
            source odoo-venv/bin/activate
            pip3 install -r odoo/requirements.txt
            deactivate
          EOF
      - name: Restart Odoo service
        run: |
          ssh -i ~/.ssh/id_rsa.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "sudo systemctl restart odoo"
          ssh -i ~/.ssh/id_rsa.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST_SANDBOX }} "sudo systemctl restart odoo"
          ssh -i ~/.ssh/id_rsa.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST_ONEXINK }} "sudo systemctl restart odoo"
          ssh -i ~/.ssh/id_rsa.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST_EASYCHECKIN }} "sudo systemctl restart odoo"
